<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>用YOLOv5训练自己的数据集</title>
      <link href="/2022/06/29/yong-yolov5-xun-lian-zi-ji-de-shu-ju-ji/"/>
      <url>/2022/06/29/yong-yolov5-xun-lian-zi-ji-de-shu-ju-ji/</url>
      
        <content type="html"><![CDATA[<p>今天试了一下用YOLOv5在HiXray(一个安检危险物品的数据集)做目标检测，先是需要对原数据集进行处理，写了个.py文件做格式转换</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> os<span class="token keyword">from</span> PIL <span class="token keyword">import</span> Imaged <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"Portable_Charger_1"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"Portable_Charger_2"</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">"Water"</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">"Laptop"</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">"Mobile_Phone"</span><span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">"Tablet"</span><span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span>     <span class="token string">"Cosmetic"</span><span class="token punctuation">:</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token string">"Nonmetallic_Lighter"</span><span class="token punctuation">:</span> <span class="token number">7</span><span class="token punctuation">&#125;</span><span class="token keyword">def</span> <span class="token function">read_and_write</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">:</span>    f <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"E:/Deep_learning/Dataset/HiXray/test/test_annotation/"</span> <span class="token operator">+</span> name<span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span>    img <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"E:/Deep_learning/Dataset/HiXray/test/test_image/"</span> <span class="token operator">+</span> name<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">".jpg"</span><span class="token punctuation">)</span>    w <span class="token operator">=</span> img<span class="token punctuation">.</span>width    h <span class="token operator">=</span> img<span class="token punctuation">.</span>height    <span class="token comment"># print(w, h)</span>    <span class="token keyword">for</span> line <span class="token keyword">in</span> f<span class="token punctuation">:</span>        arr <span class="token operator">=</span> line<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">" "</span><span class="token punctuation">)</span>        <span class="token comment"># print(arr)</span>        x_ <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">int</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">*</span> w<span class="token punctuation">)</span>        y_ <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">int</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">*</span> h<span class="token punctuation">)</span>        w_ <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token builtin">int</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> w        h_ <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token builtin">int</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> h        <span class="token comment"># print(x_, y_, w_, h_)</span>        f <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"E:/Deep_learning/Dataset/HiXray/test/test_annotation_for_yolov5/"</span> <span class="token operator">+</span> name<span class="token punctuation">,</span> <span class="token string">"a"</span><span class="token punctuation">)</span>        f<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>get<span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" "</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>x_<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" "</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>y_<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" "</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>w_<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" "</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>h_<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"\n"</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token builtin">file</span> <span class="token operator">=</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span><span class="token string">"E:/Deep_learning/Dataset/HiXray/test/test_annotation"</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> fl <span class="token keyword">in</span> <span class="token builtin">file</span><span class="token punctuation">:</span>        filename <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>basename<span class="token punctuation">(</span>fl<span class="token punctuation">)</span>        read_and_write<span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>YOLO系列最大的优势就速度快，但最后实验结果好像不是很理想。。。</p><img src="/2022/06/29/yong-yolov5-xun-lian-zi-ji-de-shu-ju-ji/val_batch0_labels.jpg" class=""><img src="/2022/06/29/yong-yolov5-xun-lian-zi-ji-de-shu-ju-ji/val_batch1_labels.jpg" class=""><img src="/2022/06/29/yong-yolov5-xun-lian-zi-ji-de-shu-ju-ji/results.png" class="">]]></content>
      
      
      
        <tags>
            
            <tag> CV </tag>
            
            <tag> object detection </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《指定幸存者》</title>
      <link href="/2022/06/21/zhi-ding-xing-cun-zhe/"/>
      <url>/2022/06/21/zhi-ding-xing-cun-zhe/</url>
      
        <content type="html"><![CDATA[<p>又是<del>学习</del>摸鱼的一天，netflix上翻到一部美剧，一连着看了14集，很新颖的题材，环环相扣，不会让人觉得很常规。看下来的感觉就是，总统不是这么好做的，不仅要应付党派斗争，还要招揽内阁成员（拉人入伙并没有那么容易），还要面对舆论和民众的质疑。</p>]]></content>
      
      
      
        <tags>
            
            <tag> movie </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>当有人独自死去，我的工作就开始了——《遗物整理师》</title>
      <link href="/2022/06/21/dang-you-ren-du-zi-si-qu-wo-de-gong-zuo-jiu-kai-shi-liao-yi-wu-zheng-li-shi/"/>
      <url>/2022/06/21/dang-you-ren-du-zi-si-qu-wo-de-gong-zuo-jiu-kai-shi-liao-yi-wu-zheng-li-shi/</url>
      
        <content type="html"><![CDATA[<p>虽然我们留下的东西最后都会消失、都会被清理掉，但我们留下的爱，相信是无人可独占的遗产。</p>]]></content>
      
      
      
        <tags>
            
            <tag> reading notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何用css实现一个三角形</title>
      <link href="/2022/06/19/ru-he-yong-css-shi-xian-yi-ge-san-jiao-xing/"/>
      <url>/2022/06/19/ru-he-yong-css-shi-xian-yi-ge-san-jiao-xing/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token selector">.triangle</span> <span class="token punctuation">&#123;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>            <span class="token property">border-top</span><span class="token punctuation">:</span> 100px solid transparent<span class="token punctuation">;</span>            <span class="token property">border-right</span><span class="token punctuation">:</span> 100px solid blue<span class="token punctuation">;</span>            <span class="token property">border-bottom</span><span class="token punctuation">:</span> 100px solid transparent<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>triangle<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>利用了border的属性，令width和height都等于0，就会形成四个对顶的三角形，然后去掉其中一条边，把两侧三角形颜色设置成transparent就可以得到一个完整的三角形了。</p>]]></content>
      
      
      
        <tags>
            
            <tag> css </tag>
            
            <tag> front-end </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git rebase 和 git merge 的区别</title>
      <link href="/2022/06/18/git-rebase-he-git-merge-de-qu-bie/"/>
      <url>/2022/06/18/git-rebase-he-git-merge-de-qu-bie/</url>
      
        <content type="html"><![CDATA[<p>git merge 和 git rebase 都是用于分支合并，关键在 commit 记录的处理上不同。</p><p>git merge 会新建一个新的 commit 对象，然后两个分支以前的 commit 记录都指向这个新 commit 记录。这种方法会<br>保留之前每个分支的 commit 历史。</p><p>git rebase 会先找到两个分支的第一个共同的 commit 祖先记录，然后将提取当前分支这之后的所有 commit 记录，然后<br>将这个 commit 记录添加到目标分支的最新提交后面。经过这个合并后，两个分支合并后的 commit 记录就变为了线性的记<br>录了。</p>]]></content>
      
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
