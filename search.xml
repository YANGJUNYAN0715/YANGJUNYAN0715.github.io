<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>初识typescript</title>
      <link href="/2022/10/13/chu-shi-typescript/"/>
      <url>/2022/10/13/chu-shi-typescript/</url>
      
        <content type="html"><![CDATA[<p>最近因为项目的原因接触了typescript，感觉是一门很有意思的语言，typescript是微软主导开发的一款编程语言，在javascript的基础上拓展而成的，因此完全兼容js。</p><p>想从个人使用的经历谈谈这门语言，ts和js最大的区别就是，js是动态类型语言，类似python，而ts是一门静态类型语言，类似java（当然很多人觉得java是介于动态类型和静态类型之间的，姑且只强调他的静态性质），ts在很多方面借鉴了java（甚至一度让我感觉“这不就是java”），引入了包括enum枚举、tuple元组、重载、接口、泛型等等概念，这使得ts在代码可读性以及代码重构方面更加容易，功能也更加强大，弥补了js类型错误的“先天缺陷”。</p><p>虽然ts在12年就被推出，但在近两年才火起来，个人觉得ts会成为未来前端开发的主力语言。</p>]]></content>
      
      
      
        <tags>
            
            <tag> typescript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决vue-cli初始化项目之后执行 &#39;npm run serve&#39; 命令出现 &#39;A_Column\xxx\node_modules\.bin\&#39; 不是内部或外部或批处理文件。&#39; 的问题</title>
      <link href="/2022/10/10/jie-jue-vue-cli-chu-shi-hua-xiang-mu-zhi-hou-zhi-xing-npm-run-serve-ming-ling-chu-xian-a-column-xxx-node-modules-bin-bu-shi-nei-bu-huo-wai-bu-huo-pi-chu-li-wen-jian-de-wen-ti/"/>
      <url>/2022/10/10/jie-jue-vue-cli-chu-shi-hua-xiang-mu-zhi-hou-zhi-xing-npm-run-serve-ming-ling-chu-xian-a-column-xxx-node-modules-bin-bu-shi-nei-bu-huo-wai-bu-huo-pi-chu-li-wen-jian-de-wen-ti/</url>
      
        <content type="html"><![CDATA[<p>今天用vue-cli初始化了一个vue-ts项目，但用vscode打开以后，运行”npm run serve”出现了如标题中所示的错误，综合他人的解决方法，只需替换node_modules.bin\vue-cli-service.cmd文件内容，原内容为</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">@ECHO offGOTO start:find_dp0SET <span class="token assign-left variable">dp0</span><span class="token operator">=</span>%~dp0EXIT /b:startSETLOCALCALL :find_dp0IF EXIST <span class="token string">"%dp0%<span class="token entity" title="\n">\n</span>ode.exe"</span> <span class="token punctuation">(</span>  SET <span class="token string">"_prog=%dp0%<span class="token entity" title="\n">\n</span>ode.exe"</span><span class="token punctuation">)</span> ELSE <span class="token punctuation">(</span>  SET <span class="token string">"_prog=node"</span>  SET <span class="token assign-left variable">PATHEXT</span><span class="token operator">=</span>%PATHEXT:<span class="token punctuation">;</span>.JS<span class="token punctuation">;</span><span class="token operator">=</span><span class="token punctuation">;</span>%<span class="token punctuation">)</span>endLocal <span class="token operator">&amp;</span> goto <span class="token comment">#_undefined_# 2>NUL || title %COMSPEC% &amp; "%_prog%"  "%dp0%\..\@vue\cli-service\bin\vue-cli-service.js" %*</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>替换为下面的内容</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">@IF EXIST <span class="token string">"%~dp0<span class="token entity" title="\n">\n</span>ode.exe"</span> <span class="token punctuation">(</span>  <span class="token string">"%~dp0<span class="token entity" title="\n">\n</span>ode.exe"</span>  <span class="token string">"%~dp0\..\@vue<span class="token entity" title="\c">\c</span>li-service<span class="token entity" title="\b">\b</span>in<span class="token entity" title="\v">\v</span>ue-cli-service.js"</span> %*<span class="token punctuation">)</span> ELSE <span class="token punctuation">(</span>  @SETLOCAL  @SET <span class="token assign-left variable">PATHEXT</span><span class="token operator">=</span>%PATHEXT:<span class="token punctuation">;</span>.JS<span class="token punctuation">;</span><span class="token operator">=</span><span class="token punctuation">;</span>%  <span class="token function">node</span>  <span class="token string">"%~dp0\..\@vue<span class="token entity" title="\c">\c</span>li-service<span class="token entity" title="\b">\b</span>in<span class="token entity" title="\v">\v</span>ue-cli-service.js"</span> %*<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>成功！</p>]]></content>
      
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> vue-cli </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode707 设计链表</title>
      <link href="/2022/09/24/leetcode707-she-ji-lian-biao/"/>
      <url>/2022/09/24/leetcode707-she-ji-lian-biao/</url>
      
        <content type="html"><![CDATA[<h4 id="707-设计链表"><a href="#707-设计链表" class="headerlink" title="707. 设计链表"></a><a href="https://leetcode.cn/problems/design-linked-list/">707. 设计链表</a></h4><p>设计链表的实现。您可以选择使用单链表或双链表。单链表中的节点应该具有两个属性：val 和 next。val 是当前节点的值，next 是指向下一个节点的指针&#x2F;引用。如果要使用双向链表，则还需要一个属性 prev 以指示链表中的上一个节点。假设链表中的所有节点都是 0-index 的。</p><p>在链表类中实现这些功能：</p><p>get(index)：获取链表中第 index 个节点的值。如果索引无效，则返回-1。<br>addAtHead(val)：在链表的第一个元素之前添加一个值为 val 的节点。插入后，新节点将成为链表的第一个节点。<br>addAtTail(val)：将值为 val 的节点追加到链表的最后一个元素。<br>addAtIndex(index,val)：在链表中的第 index 个节点之前添加值为 val  的节点。如果 index 等于链表的长度，则该节点将附加到链表的末尾。如果 index 大于链表长度，则不会插入节点。如果index小于0，则在头部插入节点。</p><pre class="line-numbers language-none"><code class="language-none">deleteAtIndex(index)：如果索引 index 有效，则删除链表中的第 index 个节点。MyLinkedList linkedList &#x3D; new MyLinkedList();linkedList.addAtHead(1);linkedList.addAtTail(3);linkedList.addAtIndex(1,2);   &#x2F;&#x2F;链表变为1-&gt; 2-&gt; 3linkedList.get(1);            &#x2F;&#x2F;返回2linkedList.deleteAtIndex(1);  &#x2F;&#x2F;现在链表是1-&gt; 3linkedList.get(1);            &#x2F;&#x2F;返回3来源：力扣（LeetCode）链接：https:&#x2F;&#x2F;leetcode.cn&#x2F;problems&#x2F;design-linked-list著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">ListNode</span><span class="token punctuation">(</span><span class="token parameter">val<span class="token punctuation">,</span> next</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>val <span class="token operator">=</span> val <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> val<span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>next <span class="token operator">=</span> next <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> next<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">var</span> <span class="token function-variable function">MyLinkedList</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>size <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>head <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ListNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">/**  * @param &#123;number&#125; index * @return &#123;number&#125; */</span><span class="token class-name">MyLinkedList</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">get</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">index</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> temp <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>head<span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>index<span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">||</span>index<span class="token operator">></span><span class="token keyword">this</span><span class="token punctuation">.</span>size<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">while</span><span class="token punctuation">(</span>index<span class="token operator">!==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        temp <span class="token operator">=</span> temp<span class="token punctuation">.</span>next<span class="token punctuation">;</span>        index<span class="token operator">--</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> temp<span class="token punctuation">.</span>next<span class="token punctuation">.</span>val<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">/**  * @param &#123;number&#125; val * @return &#123;void&#125; */</span><span class="token class-name">MyLinkedList</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">addAtHead</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">addAtIndex</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">/**  * @param &#123;number&#125; val * @return &#123;void&#125; */</span><span class="token class-name">MyLinkedList</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">addAtTail</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">addAtIndex</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>size<span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">/**  * @param &#123;number&#125; index  * @param &#123;number&#125; val * @return &#123;void&#125; */</span><span class="token class-name">MyLinkedList</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">addAtIndex</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">index<span class="token punctuation">,</span> val</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>index<span class="token operator">></span><span class="token keyword">this</span><span class="token punctuation">.</span>size<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>size <span class="token operator">++</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>index<span class="token operator">&lt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> newNode <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ListNode</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>        newNode<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>head<span class="token punctuation">.</span>next<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>head<span class="token punctuation">.</span>next <span class="token operator">=</span> newNode<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> temp <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>head<span class="token punctuation">;</span>        <span class="token keyword">while</span><span class="token punctuation">(</span>index<span class="token operator">!==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            temp <span class="token operator">=</span> temp<span class="token punctuation">.</span>next<span class="token punctuation">;</span>            index<span class="token operator">--</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">let</span> newNode <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ListNode</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>        newNode<span class="token punctuation">.</span>next <span class="token operator">=</span> temp<span class="token punctuation">.</span>next<span class="token punctuation">;</span>        temp<span class="token punctuation">.</span>next <span class="token operator">=</span> newNode<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">/**  * @param &#123;number&#125; index * @return &#123;void&#125; */</span><span class="token class-name">MyLinkedList</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">deleteAtIndex</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">index</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>index<span class="token operator">&lt;</span><span class="token number">0</span><span class="token operator">||</span>index<span class="token operator">></span><span class="token keyword">this</span><span class="token punctuation">.</span>size<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">let</span> temp <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>head<span class="token punctuation">;</span>    <span class="token keyword">while</span><span class="token punctuation">(</span>index<span class="token operator">!==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        temp <span class="token operator">=</span> temp<span class="token punctuation">.</span>next<span class="token punctuation">;</span>        index<span class="token operator">--</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    temp<span class="token punctuation">.</span>next <span class="token operator">=</span> temp<span class="token punctuation">.</span>next<span class="token punctuation">.</span>next<span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>size<span class="token operator">--</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>对链表的理解加深了捏😋</p>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决github上传以后README.md文件中图片无法加载问题</title>
      <link href="/2022/09/08/jie-jue-github-shang-chuan-yi-hou-readme-md-wen-jian-zhong-tu-pian-wu-fa-jia-zai-wen-ti/"/>
      <url>/2022/09/08/jie-jue-github-shang-chuan-yi-hou-readme-md-wen-jian-zhong-tu-pian-wu-fa-jia-zai-wen-ti/</url>
      
        <content type="html"><![CDATA[<p>发现github上传之后README.md文件中图片无法加载，查了资料以后发现，github上传的文件都默认保存在 githubusercontent.com 这个网页下。</p><ol><li><p>先通过 <a href="https://www.ipaddress.com/">https://www.ipaddress.com</a> 查询到 githubusercontent.com 对应的ip地址。</p></li><li><p>修改本机hosts (windows的hosts文件目录 C:\Windows\System32\drivers\etc\hosts）文件，增加域名和正确ip映射关系并保存。</p></li><li><p>cmd命令ipconfig &#x2F;flushdns刷新缓存。</p></li><li><p>再进入github如果发现还是不能正常加载，可能是没开启vpn，开启vpn，正常加载，over。</p></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>leetcode290 单词规律秒解</title>
      <link href="/2022/09/08/leetcode290-dan-ci-gui-lu-miao-jie/"/>
      <url>/2022/09/08/leetcode290-dan-ci-gui-lu-miao-jie/</url>
      
        <content type="html"><![CDATA[<h4 id="290-单词规律"><a href="#290-单词规律" class="headerlink" title="290. 单词规律"></a><a href="https://leetcode.cn/problems/word-pattern/">290. 单词规律</a></h4><p>给定一种规律 pattern 和一个字符串 s ，判断 s 是否遵循相同的规律。</p><p>这里的 遵循 指完全匹配，例如， pattern 里的每个字母和字符串 s 中的每个非空单词之间存在着双向连接的对应规律。</p><pre class="line-numbers language-none"><code class="language-none">示例1:输入: pattern &#x3D; &quot;abba&quot;, s &#x3D; &quot;dog cat cat dog&quot;输出: true示例 2:输入:pattern &#x3D; &quot;abba&quot;, s &#x3D; &quot;dog cat cat fish&quot;输出: false示例 3:输入: pattern &#x3D; &quot;aaaa&quot;, s &#x3D; &quot;dog cat cat dog&quot;输出: falses来源：力扣（LeetCode）链接：https:&#x2F;&#x2F;leetcode.cn&#x2F;problems&#x2F;word-pattern著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> <span class="token function-variable function">wordPattern</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">pattern<span class="token punctuation">,</span> s</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> str <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">.</span>length <span class="token operator">!==</span> pattern<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> pattern<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>pattern<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>pattern<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">!==</span> str<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>str<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里用了一种前后匹配的方式，如果pattern以及s里面有一个字符（在s中是单词）出现了两次或者两次以上，那么，第一次之后的出现时，使用IndexOf找到第一次出现的index在pattern和s中应该是一样的。</p>]]></content>
      
      
      
        <tags>
            
            <tag> leetcode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu出现&#39;Started User Manager for UID 121&#39;问题及解决办法</title>
      <link href="/2022/08/30/ubuntu-chu-xian-started-user-manager-for-uid-121-wen-ti-ji-jie-jue-ban-fa/"/>
      <url>/2022/08/30/ubuntu-chu-xian-started-user-manager-for-uid-121-wen-ti-ji-jie-jue-ban-fa/</url>
      
        <content type="html"><![CDATA[<p>在用ninja编译完一个程序以后发现磁盘容量不够了，把虚拟机从60G扩容到了105G，但重启之后，出现了’Started User Manager for UID 121’，一开始以为等一会就能正常进入系统，后来一直卡在这里，</p><img src="/2022/08/30/ubuntu-chu-xian-started-user-manager-for-uid-121-wen-ti-ji-jie-jue-ban-fa/img1.png" class=""><p>首先出现这个问题大概率是磁盘容量不够了，先是通过Ctrl+Alt+F2进入tty2模式，输入用户名密码之后就会出现终端，在这里终端就可以像虚拟机一样正常操作了。</p><p>输入df -h可以查看磁盘使用情况，果不其然100%满了，找到导致磁盘爆满的文件rm -rf xxx删除（如果是重要文件请不要删），然后reboot启动就能恢复正常了。</p><p>正常进入系统以后，选择磁盘工具，对未被分区的部分进行扩容，结束。</p><img src="/2022/08/30/ubuntu-chu-xian-started-user-manager-for-uid-121-wen-ti-ji-jie-jue-ban-fa/img2.png" class="">]]></content>
      
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小心某些VSCode插件</title>
      <link href="/2022/08/22/xiao-xin-mou-xie-vscode-cha-jian/"/>
      <url>/2022/08/22/xiao-xin-mou-xie-vscode-cha-jian/</url>
      
        <content type="html"><![CDATA[<p>今天用vite初始化vue项目完了以后，用VSCode打开居然在import项目自带的Helloworld组件下面爆了一个小红线，想了老半天都没想明白啥原因，后来突然意识到可能是插件的问题，果不其然，报错提示是”Vetur“。</p>]]></content>
      
      
      
        <tags>
            
            <tag> front-end </tag>
            
            <tag> Vue </tag>
            
            <tag> VSCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue-nextTick回调函数</title>
      <link href="/2022/08/17/vue-nexttick-hui-diao-han-shu/"/>
      <url>/2022/08/17/vue-nexttick-hui-diao-han-shu/</url>
      
        <content type="html"><![CDATA[<p>今天面试被问了vue生命周期的问题，有一个问题是，在created阶段，如何操作dom元素？因为在created阶段dom还没有被渲染。vue的异步更新策略是，在数据发生变化的时候，vue不会立刻更新dom，而是会开启一个队列，把组件更新函数保存在队列中。</p><p>这里就需要用的nextTick回调函数，使用this.$nextTick()回调函数就是处理dom异步更新的，在渲染dom之后，会自动执行回调函数。项目中现实意义就是使得页面展示的值是随数据改变啊而改变。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">methods：<span class="token punctuation">&#123;</span>    <span class="token function">testClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>content <span class="token operator">=</span> <span class="token string">'改变了的值'</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$nextTick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>            <span class="token comment">// dom元素更新后执行，因此这里能正确打印更改之后的值</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>tar<span class="token punctuation">.</span>innerText<span class="token punctuation">)</span> <span class="token comment">// 改变了的值</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> front-end </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>云图</title>
      <link href="/2022/07/25/yun-tu/"/>
      <url>/2022/07/25/yun-tu/</url>
      
        <content type="html"><![CDATA[<p>这应该是第二次看这部影片，第一次什么时候看的已经忘得一干二净了，所以只是模模糊糊地记得片名和“这部影片很特别”的印象（六个故事不断切换视觉和心理的冲击太大了）。第一次看估计是没看懂，所以不怎么记得情节了。</p><p>影片最大的特点就是串起了不同空间和时间维度的六个故事，影片中六位主角看似毫无关系，却通过微弱的联系例如书信、纪录片、日记这些方式，将爱与自由的精神在主角之间传递。黑奴贸易、同性恋、新闻自由、克隆人、老龄化、后文明时代，新奇的叙事方式加上转世的情节，独树一帜。</p><p>影片的主题是什么？一开始觉得是“自由”，后来又觉得是“传统与抗争”，因为影片中不断重复着那句话，“我绝不像暴力犯罪屈服！”，后来想想可能很难用一两个词去描绘导演想表达的意思。看到一个豆瓣的影评说的很好，“作者或许要传递的一种哲学观念，永恒的轮回，灵魂的繁衍完整。人类在追寻自由，实现自我的道路上，良心、责任、性都要有正确的认知和直面的态度，只有这样才能获得精神的自由。”</p><p>如果十年之后再去看这部影片，可能又有了不一样的想法。</p>]]></content>
      
      
      
        <tags>
            
            <tag> movie </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>浅浅地理解BFC</title>
      <link href="/2022/07/25/qian-qian-di-li-jie-bfc/"/>
      <url>/2022/07/25/qian-qian-di-li-jie-bfc/</url>
      
        <content type="html"><![CDATA[<p>BFC是Blocking formatting context（块级格式化上下文）的缩写，可以用来清除浮动</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token selector">.container</span> <span class="token punctuation">&#123;</span>            <span class="token property">border</span><span class="token punctuation">:</span> 1px solid red<span class="token punctuation">;</span>            <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span> // 触发BFC        <span class="token punctuation">&#125;</span>        <span class="token selector">.cube</span> <span class="token punctuation">&#123;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>            <span class="token property">float</span><span class="token punctuation">:</span> left        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>未使用BFC之前，子元素添加了浮动，脱离了文档流</p><img src="/2022/07/25/qian-qian-di-li-jie-bfc/image1.png" class=""><p>使用BFC之后，通过overflow:hidden触发浮动，使得父容器包裹子容器</p><img src="/2022/07/25/qian-qian-di-li-jie-bfc/image2.png" class="">]]></content>
      
      
      
        <tags>
            
            <tag> front-end </tag>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue中v-model双向绑定原理</title>
      <link href="/2022/07/23/vue-zhong-v-model-shuang-xiang-bang-ding-yuan-li/"/>
      <url>/2022/07/23/vue-zhong-v-model-shuang-xiang-bang-ding-yuan-li/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请输入名字<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    显示值:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>uName<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">        <span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>        Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token string">'username'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>            <span class="token function-variable function">get</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"取值"</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>            <span class="token function-variable function">set</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"设置值"</span><span class="token punctuation">)</span>                document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"uName"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerText <span class="token operator">=</span> val<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"keyup"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            obj<span class="token punctuation">.</span>username <span class="token operator">=</span> event<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> front-end </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS手写深拷贝</title>
      <link href="/2022/07/19/js-shou-xie-shen-kao-bei/"/>
      <url>/2022/07/19/js-shou-xie-shen-kao-bei/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token comment">// 手写深拷贝</span>    <span class="token keyword">const</span> oldobj <span class="token operator">=</span> <span class="token punctuation">&#123;</span>        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"小蓝"</span><span class="token punctuation">,</span>        <span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">,</span>        <span class="token literal-property property">colors</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"red"</span><span class="token punctuation">,</span> <span class="token string">"blue"</span><span class="token punctuation">,</span> <span class="token string">"green"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token literal-property property">friend</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>            <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'小红'</span><span class="token punctuation">,</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">function</span> <span class="token function">deepClone</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> obj <span class="token operator">!==</span> <span class="token string">'object'</span> <span class="token operator">||</span> obj <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> obj<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">let</span> result<span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>obj <span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            result <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> obj<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>obj<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                result<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">deepClone</span><span class="token punctuation">(</span>obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> result<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">const</span> newObj <span class="token operator">=</span> <span class="token function">deepClone</span><span class="token punctuation">(</span>oldobj<span class="token punctuation">)</span><span class="token punctuation">;</span>    newObj<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"小白"</span><span class="token punctuation">;</span>    newObj<span class="token punctuation">.</span>friend<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"小黑"</span><span class="token punctuation">;</span>    newObj<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">15</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'oldobj'</span><span class="token punctuation">,</span> oldobj<span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'newObj'</span><span class="token punctuation">,</span> newObj<span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> front-end </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何在页面上实现一个圆形的可点击区域？</title>
      <link href="/2022/07/18/ru-he-zai-ye-mian-shang-shi-xian-yi-ge-yuan-xing-de-ke-dian-ji-qu-yu/"/>
      <url>/2022/07/18/ru-he-zai-ye-mian-shang-shi-xian-yi-ge-yuan-xing-de-ke-dian-ji-qu-yu/</url>
      
        <content type="html"><![CDATA[<p>有多种方式可以实现，以下列举两种方式</p><ol><li>border-radius</li></ol><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>实现圆形的可点击区域<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css"><span class="token selector">*</span><span class="token punctuation">&#123;</span><span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">#circle</span><span class="token punctuation">&#123;</span><span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span><span class="token property">line-height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span><span class="token property">margin</span><span class="token punctuation">:</span> 120px auto<span class="token punctuation">;</span><span class="token property">border-radius</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span><span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span><span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token property">color</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>circle<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>可点击区域<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">window<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">var</span> oC <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'circle'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>oC<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'Yeap!'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li>纯 JS 实现</li></ol><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span> <span class="token attr-value"><span class="token punctuation attr-equals">=</span> <span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>实现圆形的可点击区域<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css"><span class="token selector">*</span><span class="token punctuation">&#123;</span><span class="token property">margin</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token property">padding</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">body</span><span class="token punctuation">&#123;</span><span class="token property">background</span><span class="token punctuation">:</span> #000<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">div</span><span class="token punctuation">&#123;</span><span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span><span class="token property">left</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span><span class="token property">top</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span><span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span><span class="token property">border-radius</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span><span class="token property">line-height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span><span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token property">color</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>可点击区域<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">window<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token comment">// 假设圆心为（100，100），半径r = 50</span>document<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">var</span> event <span class="token operator">=</span> event <span class="token operator">||</span> window<span class="token punctuation">.</span>event<span class="token punctuation">;</span><span class="token keyword">var</span> x0 <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span><span class="token keyword">var</span> y0 <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span><span class="token keyword">var</span> r <span class="token operator">=</span> <span class="token number">50</span><span class="token punctuation">;</span><span class="token keyword">var</span> x1 <span class="token operator">=</span> event<span class="token punctuation">.</span>clientX<span class="token punctuation">;</span><span class="token keyword">var</span> y1 <span class="token operator">=</span> event<span class="token punctuation">.</span>clientY<span class="token punctuation">;</span><span class="token keyword">var</span> dis <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">sqrt</span><span class="token punctuation">(</span><span class="token punctuation">(</span>x1<span class="token operator">-</span>x0<span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>x1<span class="token operator">-</span>x0<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>y1<span class="token operator">-</span>y0<span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>y1<span class="token operator">-</span>y0<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>dis <span class="token operator">&lt;=</span> r<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"Yeap~"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"Oh,no!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> front-end </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用YOLOv5训练自己的数据集（2）</title>
      <link href="/2022/07/12/yong-yolov5-xun-lian-zi-ji-de-shu-ju-ji-2/"/>
      <url>/2022/07/12/yong-yolov5-xun-lian-zi-ji-de-shu-ju-ji-2/</url>
      
        <content type="html"><![CDATA[<p>今天又尝试用YOLOv5在HiXray上做了目标检测的任务，这次和上次不同在于采用了全部数据集，上次只有很小一部分。train和val沿用了HiXray中的train部分，按照6:1比例来随机划分，test完全照搬HiXray的test。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 将原来的train部分划分成train和val,比例大概为1:6(即比例系数为0.143)</span><span class="token keyword">import</span> os<span class="token keyword">import</span> random<span class="token keyword">import</span> shutil<span class="token keyword">def</span> <span class="token function">moveFile</span><span class="token punctuation">(</span>fileDir<span class="token punctuation">,</span> tarDir<span class="token punctuation">,</span> fileDir2<span class="token punctuation">,</span> tarDir2<span class="token punctuation">)</span><span class="token punctuation">:</span>    pathDir <span class="token operator">=</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>fileDir<span class="token punctuation">)</span>  <span class="token comment"># 取图片的原始路径</span>    filenumber <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>pathDir<span class="token punctuation">)</span>    rate <span class="token operator">=</span> <span class="token number">0.143</span>  <span class="token comment"># 自定义抽取图片的比例，比方说100张抽10张，那就是0.1</span>    picknumber <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>filenumber <span class="token operator">*</span> rate<span class="token punctuation">)</span>  <span class="token comment"># 按照rate比例从文件夹中取一定数量图片</span>    sample <span class="token operator">=</span> random<span class="token punctuation">.</span>sample<span class="token punctuation">(</span>pathDir<span class="token punctuation">,</span> picknumber<span class="token punctuation">)</span>  <span class="token comment"># 随机选取picknumber数量的样本图片</span>    <span class="token comment"># print(sample)</span>    <span class="token keyword">for</span> name <span class="token keyword">in</span> sample<span class="token punctuation">:</span>        shutil<span class="token punctuation">.</span>move<span class="token punctuation">(</span>fileDir <span class="token operator">+</span> name<span class="token punctuation">,</span> tarDir <span class="token operator">+</span> <span class="token string">"\\"</span> <span class="token operator">+</span> name<span class="token punctuation">)</span>        shutil<span class="token punctuation">.</span>move<span class="token punctuation">(</span>fileDir2 <span class="token operator">+</span> name<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">".txt"</span><span class="token punctuation">,</span> tarDir2 <span class="token operator">+</span> <span class="token string">"\\"</span> <span class="token operator">+</span> name<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">".txt"</span><span class="token punctuation">)</span>    <span class="token keyword">return</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    fileDir <span class="token operator">=</span> <span class="token string">r"E:\Deep_learning\Dataset\HiXray\train\train_image"</span> <span class="token operator">+</span> <span class="token string">"\\"</span>  <span class="token comment"># 源图片文件夹路径</span>    tarDir <span class="token operator">=</span> <span class="token string">r'E:\Deep_learning\Dataset\HiXray\val\val_image'</span>  <span class="token comment"># 移动到新的文件夹路径</span>    fileDir2 <span class="token operator">=</span> <span class="token string">r"E:\Deep_learning\Dataset\HiXray\train\train_annotation_for_yolov5"</span> <span class="token operator">+</span> <span class="token string">"\\"</span>  <span class="token comment"># 对应的txt文件也要移动</span>    tarDir2 <span class="token operator">=</span> <span class="token string">r"E:\Deep_learning\Dataset\HiXray\val\val_annotation_for_yolov5"</span>    moveFile<span class="token punctuation">(</span>fileDir<span class="token punctuation">,</span> tarDir<span class="token punctuation">,</span> fileDir2<span class="token punctuation">,</span> tarDir2<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>和之前一样，也出现了过拟合的问题，有朋友说类似这样的大数据集可能都会出现过拟合的现象。</p><img src="/2022/07/12/yong-yolov5-xun-lian-zi-ji-de-shu-ju-ji-2/confusion_matrix.png" class=""><img src="/2022/07/12/yong-yolov5-xun-lian-zi-ji-de-shu-ju-ji-2/results.png" class=""><img src="/2022/07/12/yong-yolov5-xun-lian-zi-ji-de-shu-ju-ji-2/data.jpg" class="">]]></content>
      
      
      
        <tags>
            
            <tag> CV </tag>
            
            <tag> object detection </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue 父子组件之间数据的双向同步</title>
      <link href="/2022/07/05/vue-fu-zi-zu-jian-zhi-jian-shu-ju-de-shuang-xiang-tong-bu/"/>
      <url>/2022/07/05/vue-fu-zi-zu-jian-zhi-jian-shu-ju-de-shuang-xiang-tong-bu/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>App 根组件 -- &#123;&#123; count &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn btn-primary<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>count += 1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>+1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hr</span> <span class="token punctuation">/></span></span>    <span class="token comment">&lt;!-- 3. 以标签形式使用子组件 --></span>    <span class="token comment">&lt;!-- &lt;my-son :num="count" @numchange="getNum">&lt;/my-son> --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>my-son</span> <span class="token attr-name"><span class="token namespace">v-model:</span>num</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>count<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>my-son</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"><span class="token comment">// 1. 导入子组件</span><span class="token keyword">import</span> MySon <span class="token keyword">from</span> <span class="token string">'./Son.vue'</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'MyApp'</span><span class="token punctuation">,</span>  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>      <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token comment">// methods: &#123;</span>  <span class="token comment">//   getNum(num) &#123;</span>  <span class="token comment">//     this.count = num</span>  <span class="token comment">//   &#125;</span>  <span class="token comment">// &#125;,</span>  <span class="token comment">// 2. 注册子组件</span>  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    MySon<span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>less<span class="token punctuation">"</span></span> <span class="token attr-name">scoped</span><span class="token punctuation">></span></span><span class="token style"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>Son 子组件 --- &#123;&#123; num &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn btn-danger<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>add<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>+1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'MySon'</span><span class="token punctuation">,</span>  <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'num'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token literal-property property">emits</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'update:num'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token comment">// emits: ['numchange'],</span>  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// this.$emit('numchange', this.num + 1)</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">'update:num'</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>num <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>less<span class="token punctuation">"</span></span> <span class="token attr-name">scoped</span><span class="token punctuation">></span></span><span class="token style"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> front-end </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>北岛《回答》</title>
      <link href="/2022/07/01/bei-dao-hui-da/"/>
      <url>/2022/07/01/bei-dao-hui-da/</url>
      
        <content type="html"><![CDATA[<center><font size=5>新的转机和闪闪星斗<center><font size=5>在缀满没有遮拦的天空<center><font size=5>那是五千年的象形文字<center><font size=5>那是未来人们凝视的眼睛]]></content>
      
      
      
        <tags>
            
            <tag> reading notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用YOLOv5训练自己的数据集</title>
      <link href="/2022/06/29/yong-yolov5-xun-lian-zi-ji-de-shu-ju-ji/"/>
      <url>/2022/06/29/yong-yolov5-xun-lian-zi-ji-de-shu-ju-ji/</url>
      
        <content type="html"><![CDATA[<p>试了一下用YOLOv5在HiXray(一个安检危险物品的数据集)做目标检测，先是需要对原数据集进行处理，写了个.py文件做格式转换。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> os<span class="token keyword">from</span> PIL <span class="token keyword">import</span> Imaged <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"Portable_Charger_1"</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"Portable_Charger_2"</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">"Water"</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">"Laptop"</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">"Mobile_Phone"</span><span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">"Tablet"</span><span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span>     <span class="token string">"Cosmetic"</span><span class="token punctuation">:</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token string">"Nonmetallic_Lighter"</span><span class="token punctuation">:</span> <span class="token number">7</span><span class="token punctuation">&#125;</span><span class="token keyword">def</span> <span class="token function">read_and_write</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">:</span>    f <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"E:/Deep_learning/Dataset/HiXray/test/test_annotation/"</span> <span class="token operator">+</span> name<span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span>    img <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"E:/Deep_learning/Dataset/HiXray/test/test_image/"</span> <span class="token operator">+</span> name<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">".jpg"</span><span class="token punctuation">)</span>    w <span class="token operator">=</span> img<span class="token punctuation">.</span>width    h <span class="token operator">=</span> img<span class="token punctuation">.</span>height    <span class="token comment"># print(w, h)</span>    <span class="token keyword">for</span> line <span class="token keyword">in</span> f<span class="token punctuation">:</span>        arr <span class="token operator">=</span> line<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">" "</span><span class="token punctuation">)</span>        <span class="token comment"># print(arr)</span>        x_ <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">int</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">*</span> w<span class="token punctuation">)</span>        y_ <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">int</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">*</span> h<span class="token punctuation">)</span>        w_ <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token builtin">int</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> w        h_ <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token builtin">int</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> h        <span class="token comment"># print(x_, y_, w_, h_)</span>        f <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"E:/Deep_learning/Dataset/HiXray/test/test_annotation_for_yolov5/"</span> <span class="token operator">+</span> name<span class="token punctuation">,</span> <span class="token string">"a"</span><span class="token punctuation">)</span>        f<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span>get<span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" "</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>x_<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" "</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>y_<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" "</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>w_<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" "</span> <span class="token operator">+</span> <span class="token builtin">str</span><span class="token punctuation">(</span>h_<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"\n"</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token builtin">file</span> <span class="token operator">=</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span><span class="token string">"E:/Deep_learning/Dataset/HiXray/test/test_annotation"</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> fl <span class="token keyword">in</span> <span class="token builtin">file</span><span class="token punctuation">:</span>        filename <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>basename<span class="token punctuation">(</span>fl<span class="token punctuation">)</span>        read_and_write<span class="token punctuation">(</span>filename<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>数据集用的是HiXray，HiXray原数据集只有test和train两个类，YOLOv5的数据集输入应该包括train，test和val，我的实验数据集中的train采用了原数据集train中前2400张，val采用的是和train一样的数据集第2401-2800这400张，test采用的是原数据集test前800张。</p><p>YOLO系列最大的优势就速度快，但最后实验结果好像不是很理想，有出现过拟合的问题，mAp也偏低，总的平均只有75%左右，Nonmentallic_Lighter好像很不容易识别。</p><img src="/2022/06/29/yong-yolov5-xun-lian-zi-ji-de-shu-ju-ji/confusion_matrix.png" class=""><img src="/2022/06/29/yong-yolov5-xun-lian-zi-ji-de-shu-ju-ji/results.png" class=""><p>下面两张分别是0,1,2个batch以后，图片真实框和预测框，</p><p>val_batch0_labels</p><img src="/2022/06/29/yong-yolov5-xun-lian-zi-ji-de-shu-ju-ji/val_batch0_labels.jpg" class=""><p>val_batch0_pred</p><img src="/2022/06/29/yong-yolov5-xun-lian-zi-ji-de-shu-ju-ji/val_batch0_pred.jpg" class=""><p>val_batch1_labels</p><img src="/2022/06/29/yong-yolov5-xun-lian-zi-ji-de-shu-ju-ji/val_batch1_labels.jpg" class=""><p>val_batch1_pred</p><img src="/2022/06/29/yong-yolov5-xun-lian-zi-ji-de-shu-ju-ji/val_batch1_pred.jpg" class=""><p>val_batch2_labels</p><img src="/2022/06/29/yong-yolov5-xun-lian-zi-ji-de-shu-ju-ji/val_batch2_labels.jpg" class=""><p>val_batch2_pred</p><img src="/2022/06/29/yong-yolov5-xun-lian-zi-ji-de-shu-ju-ji/val_batch2_pred.jpg" class="">]]></content>
      
      
      
        <tags>
            
            <tag> CV </tag>
            
            <tag> object detection </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《指定幸存者》</title>
      <link href="/2022/06/21/zhi-ding-xing-cun-zhe/"/>
      <url>/2022/06/21/zhi-ding-xing-cun-zhe/</url>
      
        <content type="html"><![CDATA[<p>又是<del>学习</del>摸鱼的一天，netflix上翻到一部美剧，一连着看了14集，很新颖的题材，环环相扣，不会让人觉得很常规。看下来的感觉就是，总统不是这么好做的，不仅要应付党派斗争，还要招揽内阁成员（拉人入伙并没有那么容易），还要面对舆论和民众的质疑。第一部的节奏把握也比较好，都是一波未平一波又起，两条主线同步开展，时常又不断交叉，将大人物与小人物的故事结合在一起。</p>]]></content>
      
      
      
        <tags>
            
            <tag> movie </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>当有人独自死去，我的工作就开始了——《遗物整理师》</title>
      <link href="/2022/06/21/dang-you-ren-du-zi-si-qu-wo-de-gong-zuo-jiu-kai-shi-liao-yi-wu-zheng-li-shi/"/>
      <url>/2022/06/21/dang-you-ren-du-zi-si-qu-wo-de-gong-zuo-jiu-kai-shi-liao-yi-wu-zheng-li-shi/</url>
      
        <content type="html"><![CDATA[<p>虽然我们留下的东西最后都会消失、都会被清理掉，但我们留下的爱，相信是无人可独占的遗产。</p>]]></content>
      
      
      
        <tags>
            
            <tag> reading notes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何用css实现一个三角形</title>
      <link href="/2022/06/19/ru-he-yong-css-shi-xian-yi-ge-san-jiao-xing/"/>
      <url>/2022/06/19/ru-he-yong-css-shi-xian-yi-ge-san-jiao-xing/</url>
      
        <content type="html"><![CDATA[<pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">        <span class="token selector">.triangle</span> <span class="token punctuation">&#123;</span>            <span class="token property">width</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>            <span class="token property">border-top</span><span class="token punctuation">:</span> 100px solid transparent<span class="token punctuation">;</span>            <span class="token property">border-right</span><span class="token punctuation">:</span> 100px solid blue<span class="token punctuation">;</span>            <span class="token property">border-bottom</span><span class="token punctuation">:</span> 100px solid transparent<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>triangle<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>利用了border的属性，令width和height都等于0，就会形成四个对顶的三角形，然后去掉其中一条边，把两侧三角形颜色设置成transparent就可以得到一个完整的三角形了。</p>]]></content>
      
      
      
        <tags>
            
            <tag> front-end </tag>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git rebase 和 git merge 的区别</title>
      <link href="/2022/06/18/git-rebase-he-git-merge-de-qu-bie/"/>
      <url>/2022/06/18/git-rebase-he-git-merge-de-qu-bie/</url>
      
        <content type="html"><![CDATA[<p>git merge 和 git rebase 都是用于分支合并，关键在 commit 记录的处理上不同。</p><p>git merge 会新建一个新的 commit 对象，然后两个分支以前的 commit 记录都指向这个新 commit 记录。这种方法会<br>保留之前每个分支的 commit 历史。</p><p>git rebase 会先找到两个分支的第一个共同的 commit 祖先记录，然后将提取当前分支这之后的所有 commit 记录，然后<br>将这个 commit 记录添加到目标分支的最新提交后面。经过这个合并后，两个分支合并后的 commit 记录就变为了线性的记<br>录了。</p>]]></content>
      
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
